module Demo.Poll where

    import Topl.Asset
    import Topl.Utils

    type DemoPollId = ContractId DemoPoll

    template DemoPollVoted
        with
            operator     : Party
            participant  : Party 
            yesAddress   : Text
            noAddress : Text
            issuerAddress: Text
            assetCode : AssetCode
            isThisADemo: Bool
        where
            signatory operator, participant

            key (participant): Party

            maintainer key

            choice DemoPollVoted_CaptureSignRequest: ContractId DemoPollSignRequest with
                    unsignedAssetTransfer: UnsignedAssetTransferRequest
                    unsignedAssetTransferCid: ContractId UnsignedAssetTransferRequest
                controller operator
                do
                    create DemoPollSignRequest with ..
            choice DemoPollVoted_Archive: ()
                controller operator
                do
                    pure ()

    template DemoPollSignRequest
        with
            operator : Party
            participant : Party
            yesAddress   : Text
            noAddress : Text
            issuerAddress: Text
            assetCode : AssetCode
            unsignedAssetTransfer: UnsignedAssetTransferRequest
            unsignedAssetTransferCid: ContractId UnsignedAssetTransferRequest
            isThisADemo: Bool
        where
            signatory operator, participant

            key (participant) : (Party)

            maintainer key

            choice DemoPollSignRequest_Sign: ContractId DemoPollCompleted
                with
                    signedTx: Text
                controller participant
                do
                    exercise unsignedAssetTransferCid UnsignedAssetTransfer_Sign with ..
                    create DemoPollCompleted with ..

    template DemoPollCompleted
        with
            operator : Party
            participant : Party
            yesAddress   : Text
            noAddress : Text
            assetCode : AssetCode
        where
            signatory operator, participant

            key (participant) : (Party)

            maintainer key

            choice DemoPollCompleted_AskForBalance: ()
                controller operator
                do
                    create AssetBalanceRequest with requestor = participant, address = yesAddress,  ..
                    create AssetBalanceRequest with requestor = participant, address = noAddress,  ..
                    create DemoPollShowResults with ..
                    return ()

    template DemoPollShowResults
        with
            operator : Party
            participant : Party
            yesAddress   : Text
            noAddress : Text
            assetCode : AssetCode
        where
            signatory operator, participant

            key (participant) : (Party)

            maintainer key

            choice DemoPollShowResults_CaptureResult: ContractId DemoPollProcessedResults
                with
                    yesBalance: AssetBalanceResponse
                    yesBalanceCid: ContractId AssetBalanceResponse
                    noBalance: AssetBalanceResponse
                    noBalanceCid: ContractId AssetBalanceResponse
                controller operator
                do
                    let totalVotes = (intToDecimal yesBalance.quantity + intToDecimal noBalance.quantity)
                    create DemoPollProcessedResults with 
                        yesCount = yesBalance.quantity 
                        noCount = noBalance.quantity
                        yesPercent = 100.0 * (intToDecimal yesBalance.quantity  / totalVotes)
                        noPercent = 100.0 * (intToDecimal noBalance.quantity / totalVotes)
                        ..

    template DemoPollProcessedResults
        with
            operator : Party
            participant : Party
            yesCount   : Int
            yesPercent   : Decimal
            noCount : Int
            noPercent : Decimal
            yesAddress   : Text
            noAddress : Text
            yesBalanceCid: ContractId AssetBalanceResponse
            noBalanceCid: ContractId AssetBalanceResponse
            assetCode : AssetCode
        where
            signatory operator, participant


            key (participant) : (Party)

            maintainer key

            choice DemoPollProcessedResults_Archive: ()
                controller participant
                do
                    exercise yesBalanceCid AssetBalanceResponse_Archive
                    exercise noBalanceCid AssetBalanceResponse_Archive
                    return ()

            choice DemoPollProcessedResults_Reprocess: ()
                controller participant
                do
                    exercise yesBalanceCid AssetBalanceResponse_Archive
                    exercise noBalanceCid AssetBalanceResponse_Archive
                    create AssetBalanceRequest with requestor = participant, address = yesAddress,  ..
                    create AssetBalanceRequest with requestor = participant, address = noAddress,  ..
                    create DemoPollShowResults with ..
                    return ()


    template DemoPoll
        with 
            operator     : Party
            participant  : Party
            issuerAddress: Text
            fromAddress  : Text
            yesAddress   : Text
            noAddress : Text
            changeAddress : Text
            assetCode : AssetCode
            boxNonce : Int
        where
            signatory operator, participant

            key (participant): Party

            maintainer key

            choice DemoPoll_YesThisIsDemo: AssetTransferRequestCid
                controller participant
                do
                    create DemoPollVoted with isThisADemo = True, ..
                    create AssetTransferRequest with 
                        operator       = operator
                        requestor      = participant
                        someOrgId      = None
                        from           = [fromAddress]
                        to             = [ (yesAddress, 1)]
                        quantity       = 1
                        someCommitRoot = None
                        someMetadata   = None
                        fee            = 100
                        changeAddress  = fromAddress
                        ..
            choice DemoPoll_NoThisIsNotDemo: AssetTransferRequestCid
                controller participant
                do
                    create DemoPollVoted with isThisADemo = False, ..
                    create AssetTransferRequest with 
                        operator       = operator
                        requestor      = participant
                        someOrgId      = None
                        from           = [fromAddress]
                        to             = [ (noAddress, 1)]
                        quantity       = 1
                        someCommitRoot = None
                        someMetadata   = None
                        fee            = 100
                        changeAddress  = fromAddress
                        ..
            choice DemoPoll_Timeout: ()
                controller operator
                do return ()

    template PollAnswer
        with
            operator: Party
            participant: Party
            answer: Bool
        where
            signatory operator, participant
            
